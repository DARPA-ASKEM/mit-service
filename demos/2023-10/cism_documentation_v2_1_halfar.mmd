#### Halfar dome

The Halfar test case describes the time evolution of a parabolic dome of ice, as described by Halfar (1983). For a flat-bedded SIA problem, this case has an analytic solution for the time varying ice thickness. We start with the general SIA ice evolution equation,

\[\frac{\partial H}{\partial t}=\nabla\cdot(\Gamma H^{n+2}|\nabla H|^{n-1}\nabla H), \tag{8.1}\]

where \(n\) is the exponent in the Glen flow law, commonly taken as 3, and \(\Gamma\) is a positive constant:

\[\Gamma=\frac{2}{n+2}A(\rho g)^{n}. \tag{8.2}\]

For \(n=3\), the time-dependent solution is

\[H(t,r)=H_{0}\left(\frac{t_{0}}{t}\right)^{\frac{1}{5}}\left[1-\left(\left( \frac{t_{0}}{t}\right)^{\frac{1}{18}}\frac{r}{R_{0}}\right)^{\frac{3}{5}} \right]^{\frac{3}{7}}, \tag{8.3}\]

where

\[t_{0}=\frac{1}{18\Gamma}\left(\frac{7}{4}\right)^{3}\frac{R_{0}^{4}}{H_{0}^{7}}, \tag{8.4}\]

and \(H_{0},R_{0}\) are the central height of the dome and its radius at time \(t=t_{0}\). For more details, see Halfar (1983), Bueler et al. (2005), and this link1.

Footnote 1: [http://www.giesis.alaska.edu/input/carl/teaching/extra/bueler_notes.pdf](http://www.giesis.alaska.edu/input/carl/teaching/extra/bueler_notes.pdf)

#### Provided files

Our implementation of the Halfar dome test has an initial radius of \(R_{0}=21.2\) km and an initial thickness of \(H=707.1\) m. These values can be changed by editing the halfarDome function in runHalfar.py.

* README.md Information about the test case, including technical details about running it.
* halfar.config This is the config file defining CISM options. It is set up to run Glide.
* halfar-HO.config This alternative config file is set up to run Glissade using the Blatter-Pattyn approximation of Stokes flow. By manually setting which_ho_approx under [ho_options], users can choose other approximations (see Section 7.3).
* runHalfar.py This python script generates the dome initial condition and runs CISM.
* halfar_results.py This script compares model results to the analytic solution.

##### Running the test

One script sets up the initial condition and runs the model:

./runHalfar.py

Note that to run the test with the halfar-HO.config settings, you can use the -c command-dine option for specifying a configuration file:

./runHalfar.py -c halfar-HO.config

Another script analyzes and plots the results:

./halfar_results.py

##### Results

With the default.config settings, this simulation should only take a few seconds and is a good first test for a working Glide dycore. With Glissade, the Blatter-Pattyn option takes a few minutes, but the SIA and L1L2 settings are much faster. As the dome of ice evolves, its margin advances and its thickness decreases (there is no surface mass balance to add new mass). The script halfar_results.py will plot the modeled and analytic thickness at a specified time (Figure 8.1), and also report error statistics. Invoke halfar_results.py --help for details on its use.

##### Eismint-1

This test case is from phase 1 of the European Ice Sheet Modelling INTiative intercomparison experiments. These experiments are described in more detail here2 and in Huybrechts et al. (1996).

##### Provided files

* README.md Information about the test case, including technical details about running it.

Figure 8.1: Halfar test case results (using Glide) after 200 years of dome evolution. This figure is generated by halfar_results.py.